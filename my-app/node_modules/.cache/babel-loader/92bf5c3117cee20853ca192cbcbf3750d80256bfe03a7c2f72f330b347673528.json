{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\n\n// Base URL and default headers setup\naxios.defaults.baseURL = 'https://productive-you-api-d9afbaf8a80b.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.withCredentials = true;\nconst csrftoken = Cookies.get('csrftoken');\nif (csrftoken) {\n  axios.defaults.headers.common['X-CSRFToken'] = csrftoken;\n}\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();\naxiosReq.interceptors.response.use(response => response, async error => {\n  if (error.response && error.response.status === 401) {\n    try {\n      const refreshedToken = await refreshToken();\n      const config = error.config;\n      config.headers['Authorization'] = `Bearer ${refreshedToken.access}`;\n      return axiosReq(config);\n    } catch (refreshError) {\n      console.error('Error refreshing token:', refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Function to refresh authentication token\nexport const refreshToken = async () => {\n  try {\n    const response = await axios.post('/dj-rest-auth/token/refresh/', {}, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (err) {\n    console.error('Error refreshing token:', err);\n    throw err;\n  }\n};\n\n// Function to check authenticated user\nexport const checkUser = async () => {\n  try {\n    const response = await axios.get('/dj-rest-auth/user/', {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (err) {\n    console.error('Error checking user:', err);\n    throw err;\n  }\n};","map":{"version":3,"names":["axios","Cookies","defaults","baseURL","headers","common","withCredentials","csrftoken","get","axiosReq","create","axiosRes","interceptors","response","use","error","status","refreshedToken","refreshToken","config","access","refreshError","console","Promise","reject","post","data","err","checkUser"],"sources":["/Users/leighallen/Documents/GitHub/React-ProductiveYou/my-app/src/api/axiosDefaults.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\n// Base URL and default headers setup\naxios.defaults.baseURL = 'https://productive-you-api-d9afbaf8a80b.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.withCredentials = true;\n\nconst csrftoken = Cookies.get('csrftoken');\nif (csrftoken) {\n  axios.defaults.headers.common['X-CSRFToken'] = csrftoken;\n}\n\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();\n\naxiosReq.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (error.response && error.response.status === 401) {\n      try {\n        const refreshedToken = await refreshToken();\n        const config = error.config;\n        config.headers['Authorization'] = `Bearer ${refreshedToken.access}`;\n        return axiosReq(config);\n      } catch (refreshError) {\n        console.error('Error refreshing token:', refreshError);\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Function to refresh authentication token\nexport const refreshToken = async () => {\n  try {\n    const response = await axios.post('/dj-rest-auth/token/refresh/', {}, {\n      withCredentials: true,\n    });\n    return response.data;\n  } catch (err) {\n    console.error('Error refreshing token:', err);\n    throw err;\n  }\n};\n\n// Function to check authenticated user\nexport const checkUser = async () => {\n  try {\n    const response = await axios.get('/dj-rest-auth/user/', {\n      withCredentials: true,\n    });\n    return response.data;\n  } catch (err) {\n    console.error('Error checking user:', err);\n    throw err;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AACAD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAG,uDAAuD;AAChFH,KAAK,CAACE,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;AAClEL,KAAK,CAACE,QAAQ,CAACI,eAAe,GAAG,IAAI;AAErC,MAAMC,SAAS,GAAGN,OAAO,CAACO,GAAG,CAAC,WAAW,CAAC;AAC1C,IAAID,SAAS,EAAE;EACbP,KAAK,CAACE,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,aAAa,CAAC,GAAGE,SAAS;AAC1D;AAEA,OAAO,MAAME,QAAQ,GAAGT,KAAK,CAACU,MAAM,CAAC,CAAC;AACtC,OAAO,MAAMC,QAAQ,GAAGX,KAAK,CAACU,MAAM,CAAC,CAAC;AAEtCD,QAAQ,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC/BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EACf,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACnD,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMC,YAAY,CAAC,CAAC;MAC3C,MAAMC,MAAM,GAAGJ,KAAK,CAACI,MAAM;MAC3BA,MAAM,CAACf,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUa,cAAc,CAACG,MAAM,EAAE;MACnE,OAAOX,QAAQ,CAACU,MAAM,CAAC;IACzB,CAAC,CAAC,OAAOE,YAAY,EAAE;MACrBC,OAAO,CAACP,KAAK,CAAC,yBAAyB,EAAEM,YAAY,CAAC;IACxD;EACF;EACA,OAAOE,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMb,KAAK,CAACyB,IAAI,CAAC,8BAA8B,EAAE,CAAC,CAAC,EAAE;MACpEnB,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOO,QAAQ,CAACa,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZL,OAAO,CAACP,KAAK,CAAC,yBAAyB,EAAEY,GAAG,CAAC;IAC7C,MAAMA,GAAG;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMb,KAAK,CAACQ,GAAG,CAAC,qBAAqB,EAAE;MACtDF,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOO,QAAQ,CAACa,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZL,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEY,GAAG,CAAC;IAC1C,MAAMA,GAAG;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}