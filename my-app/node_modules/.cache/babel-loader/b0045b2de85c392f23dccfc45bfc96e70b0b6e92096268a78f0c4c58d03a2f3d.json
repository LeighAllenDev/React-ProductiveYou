{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Container,Row,Col,Button,Card,Modal}from'react-bootstrap';import axios from'axios';import TaskForm from'./TaskForm';import TaskDetail from'./TaskDetail';import styles from'../App.module.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TaskList=()=>{const[tasks,setTasks]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(0);const[showTaskForm,setShowTaskForm]=useState(false);const[showTaskDetail,setShowTaskDetail]=useState(false);const[selectedTaskId,setSelectedTaskId]=useState(null);const fetchTasks=async page=>{try{console.log(`Fetching tasks for page_size=${page}`);const response=await axios.get(`/api/tasks/?page_size=${page}`);console.log(\"Fetched Tasks:\",response.data);setTasks(response.data.results||[]);setTotalPages(response.data.total_pages||1);}catch(error){console.error(\"Error fetching tasks:\",error);}};useEffect(()=>{fetchTasks(currentPage);},[currentPage]);const handleNextPage=()=>{if(currentPage<totalPages)setCurrentPage(prev=>prev+1);};const handlePreviousPage=()=>{if(currentPage>1)setCurrentPage(prev=>prev-1);};const handleTaskFormSubmit=()=>{setShowTaskForm(false);setSelectedTaskId(null);fetchTasks(currentPage);// Refresh current page\n};const handleTaskDeleted=()=>{setShowTaskDetail(false);fetchTasks(currentPage);// Refresh tasks after deletion\n};return/*#__PURE__*/_jsxs(Container,{className:styles.App,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center my-4\",children:\"Task List\"}),/*#__PURE__*/_jsx(Row,{className:\"mb-3\",children:/*#__PURE__*/_jsx(Col,{className:\"text-center\",children:/*#__PURE__*/_jsx(Button,{onClick:()=>{setShowTaskForm(true);setSelectedTaskId(null);},variant:\"primary\",children:\"Add New Task\"})})}),tasks.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:tasks.map(task=>/*#__PURE__*/_jsx(Col,{md:4,className:\"mb-4\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{style:{color:'black'},children:[/*#__PURE__*/_jsx(Card.Title,{children:/*#__PURE__*/_jsx(\"span\",{className:styles.CardLink,onClick:()=>{setSelectedTaskId(task.id);setShowTaskDetail(true);},style:{cursor:'pointer'},children:task.task_name})}),/*#__PURE__*/_jsx(Card.Text,{children:task.description})]})})},task.id))}),/*#__PURE__*/_jsx(Row,{className:\"justify-content-center mt-4\",children:/*#__PURE__*/_jsxs(Col,{className:\"text-center\",children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handlePreviousPage,disabled:currentPage===1,children:\"Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"mx-3\",children:[\"Page \",currentPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleNextPage,disabled:currentPage===totalPages,children:\"Next\"})]})})]}):/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{className:\"text-center\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No tasks available.\"})})}),/*#__PURE__*/_jsxs(Modal,{show:showTaskForm,onHide:()=>setShowTaskForm(false),size:\"lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:selectedTaskId?'Edit Task':'Add Task'})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(TaskForm,{initialTask:selectedTaskId?tasks.find(task=>task.id===selectedTaskId):null,onSuccess:handleTaskFormSubmit})})]}),/*#__PURE__*/_jsxs(Modal,{show:showTaskDetail,onHide:()=>setShowTaskDetail(false),size:\"lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Task Details\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:selectedTaskId?/*#__PURE__*/_jsx(TaskDetail,{id:selectedTaskId,onClose:handleTaskDeleted}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})})]})]});};export default TaskList;","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Button","Card","Modal","axios","TaskForm","TaskDetail","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskList","tasks","setTasks","currentPage","setCurrentPage","totalPages","setTotalPages","showTaskForm","setShowTaskForm","showTaskDetail","setShowTaskDetail","selectedTaskId","setSelectedTaskId","fetchTasks","page","console","log","response","get","data","results","total_pages","error","handleNextPage","prev","handlePreviousPage","handleTaskFormSubmit","handleTaskDeleted","className","App","children","onClick","variant","length","map","task","md","Body","style","color","Title","CardLink","id","cursor","task_name","Text","description","disabled","show","onHide","size","Header","closeButton","initialTask","find","onSuccess","onClose"],"sources":["/Users/leighallen/Documents/GitHub/React-ProductiveYou/my-app/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button, Card, Modal } from 'react-bootstrap';\nimport axios from 'axios';\nimport TaskForm from './TaskForm';\nimport TaskDetail from './TaskDetail';\nimport styles from '../App.module.css';\n\nconst TaskList = () => {\n    const [tasks, setTasks] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [showTaskForm, setShowTaskForm] = useState(false);\n    const [showTaskDetail, setShowTaskDetail] = useState(false);\n    const [selectedTaskId, setSelectedTaskId] = useState(null);\n\n    const fetchTasks = async (page) => {\n        try {\n            console.log(`Fetching tasks for page_size=${page}`);\n            const response = await axios.get(`/api/tasks/?page_size=${page}`);\n            console.log(\"Fetched Tasks:\", response.data);\n            setTasks(response.data.results || []);\n            setTotalPages(response.data.total_pages || 1);\n        } catch (error) {\n            console.error(\"Error fetching tasks:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchTasks(currentPage);\n    }, [currentPage]);\n\n    const handleNextPage = () => {\n        if (currentPage < totalPages) setCurrentPage((prev) => prev + 1);\n    };\n\n    const handlePreviousPage = () => {\n        if (currentPage > 1) setCurrentPage((prev) => prev - 1);\n    };\n\n    const handleTaskFormSubmit = () => {\n        setShowTaskForm(false);\n        setSelectedTaskId(null);\n        fetchTasks(currentPage); // Refresh current page\n    };\n\n    const handleTaskDeleted = () => {\n        setShowTaskDetail(false);\n        fetchTasks(currentPage); // Refresh tasks after deletion\n    };\n\n    return (\n        <Container className={styles.App}>\n            <h1 className=\"text-center my-4\">Task List</h1>\n            <Row className=\"mb-3\">\n                <Col className=\"text-center\">\n                    <Button\n                        onClick={() => {\n                            setShowTaskForm(true);\n                            setSelectedTaskId(null);\n                        }}\n                        variant=\"primary\"\n                    >\n                        Add New Task\n                    </Button>\n                </Col>\n            </Row>\n            {tasks.length > 0 ? (\n                <>\n                    <Row>\n                        {tasks.map(task => (\n                            <Col key={task.id} md={4} className=\"mb-4\">\n                                <Card>\n                                    <Card.Body style={{ color: 'black' }}>\n                                        <Card.Title>\n                                            <span\n                                                className={styles.CardLink}\n                                                onClick={() => {\n                                                    setSelectedTaskId(task.id);\n                                                    setShowTaskDetail(true);\n                                                }}\n                                                style={{ cursor: 'pointer' }}\n                                            >\n                                                {task.task_name}\n                                            </span>\n                                        </Card.Title>\n                                        <Card.Text>{task.description}</Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                    <Row className=\"justify-content-center mt-4\">\n                        <Col className=\"text-center\">\n                            <Button\n                                variant=\"secondary\"\n                                onClick={handlePreviousPage}\n                                disabled={currentPage === 1}\n                            >\n                                Previous\n                            </Button>\n                            <span className=\"mx-3\">\n                                Page {currentPage} of {totalPages}\n                            </span>\n                            <Button\n                                variant=\"secondary\"\n                                onClick={handleNextPage}\n                                disabled={currentPage === totalPages}\n                            >\n                                Next\n                            </Button>\n                        </Col>\n                    </Row>\n                </>\n            ) : (\n                <Row>\n                    <Col className=\"text-center\">\n                        <p>No tasks available.</p>\n                    </Col>\n                </Row>\n            )}\n\n            {/* Task Form Modal */}\n            <Modal show={showTaskForm} onHide={() => setShowTaskForm(false)} size=\"lg\">\n                <Modal.Header closeButton>\n                    <Modal.Title>{selectedTaskId ? 'Edit Task' : 'Add Task'}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <TaskForm\n                        initialTask={selectedTaskId ? tasks.find((task) => task.id === selectedTaskId) : null}\n                        onSuccess={handleTaskFormSubmit}\n                    />\n                </Modal.Body>\n            </Modal>\n\n            {/* Task Detail Modal */}\n            <Modal\n                show={showTaskDetail}\n                onHide={() => setShowTaskDetail(false)}\n                size=\"lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Task Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {selectedTaskId ? (\n                        <TaskDetail id={selectedTaskId} onClose={handleTaskDeleted} />\n                    ) : (\n                        <p>Loading...</p>\n                    )}\n                </Modal.Body>\n            </Modal>\n        </Container>\n    );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}