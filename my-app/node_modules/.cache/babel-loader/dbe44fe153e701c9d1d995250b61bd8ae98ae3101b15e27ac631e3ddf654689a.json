{"ast":null,"code":"import axios from'axios';import Cookies from'js-cookie';// Base API URL\naxios.defaults.baseURL='https://productive-you-api-d9afbaf8a80b.herokuapp.com';axios.defaults.headers.common['Content-Type']='application/json';axios.defaults.withCredentials=true;// Function to get CSRF token dynamically\nconst getCSRFToken=()=>Cookies.get('csrftoken');// Create axios instances\nexport const axiosReq=axios.create();export const axiosRes=axios.create();// Set up request interceptor for CSRF token & Authorization header\nconst setRequestHeaders=config=>{const csrftoken=getCSRFToken();if(csrftoken){config.headers['X-CSRFToken']=csrftoken;}const accessToken=Cookies.get('accessToken');if(accessToken){config.headers['Authorization']=`Bearer ${accessToken}`;}return config;};axiosReq.interceptors.request.use(setRequestHeaders,error=>Promise.reject(error));axiosRes.interceptors.request.use(setRequestHeaders,error=>Promise.reject(error));// Token Refresh Function\nexport const refreshToken=async()=>{try{const response=await axios.post('/dj-rest-auth/token/refresh/',{},{withCredentials:true});const newAccessToken=response.data.access;if(newAccessToken){Cookies.set('accessToken',newAccessToken,{secure:true,sameSite:'None'});}return newAccessToken;}catch(err){console.error('Error refreshing token:',err);throw err;}};axiosReq.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const newAccessToken=await refreshToken();if(newAccessToken){originalRequest.headers['Authorization']=`Bearer ${newAccessToken}`;return axiosReq(originalRequest);}}catch(refreshError){console.error('Token refresh failed:',refreshError);}}return Promise.reject(error);});// Function to check authenticated user\nexport const checkUser=async()=>{try{const response=await axios.get('/dj-rest-auth/user/',{withCredentials:true});return response.data;}catch(err){console.error('Error checking user:',err);throw err;}};","map":{"version":3,"names":["axios","Cookies","defaults","baseURL","headers","common","withCredentials","getCSRFToken","get","axiosReq","create","axiosRes","setRequestHeaders","config","csrftoken","accessToken","interceptors","request","use","error","Promise","reject","refreshToken","response","post","newAccessToken","data","access","set","secure","sameSite","err","console","_error$response","originalRequest","status","_retry","refreshError","checkUser"],"sources":["/Users/leighallen/Documents/GitHub/React-ProductiveYou/my-app/src/api/axiosDefaults.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\n// Base API URL\naxios.defaults.baseURL = 'https://productive-you-api-d9afbaf8a80b.herokuapp.com';\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.withCredentials = true;\n\n// Function to get CSRF token dynamically\nconst getCSRFToken = () => Cookies.get('csrftoken');\n\n// Create axios instances\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();\n\n// Set up request interceptor for CSRF token & Authorization header\nconst setRequestHeaders = (config) => {\n  const csrftoken = getCSRFToken();\n  if (csrftoken) {\n    config.headers['X-CSRFToken'] = csrftoken;\n  }\n\n  const accessToken = Cookies.get('accessToken');\n  if (accessToken) {\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\n  }\n\n  return config;\n};\n\naxiosReq.interceptors.request.use(setRequestHeaders, (error) => Promise.reject(error));\naxiosRes.interceptors.request.use(setRequestHeaders, (error) => Promise.reject(error));\n\n// Token Refresh Function\nexport const refreshToken = async () => {\n  try {\n    const response = await axios.post('/dj-rest-auth/token/refresh/', {}, { withCredentials: true });\n    const newAccessToken = response.data.access;\n    \n    if (newAccessToken) {\n      Cookies.set('accessToken', newAccessToken, { secure: true, sameSite: 'None' });\n    }\n\n    return newAccessToken;\n  } catch (err) {\n    console.error('Error refreshing token:', err);\n    throw err;\n  }\n};\n\naxiosReq.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const newAccessToken = await refreshToken();\n        if (newAccessToken) {\n          originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n          return axiosReq(originalRequest);\n        }\n      } catch (refreshError) {\n        console.error('Token refresh failed:', refreshError);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Function to check authenticated user\nexport const checkUser = async () => {\n  try {\n    const response = await axios.get('/dj-rest-auth/user/', { withCredentials: true });\n    return response.data;\n  } catch (err) {\n    console.error('Error checking user:', err);\n    throw err;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}