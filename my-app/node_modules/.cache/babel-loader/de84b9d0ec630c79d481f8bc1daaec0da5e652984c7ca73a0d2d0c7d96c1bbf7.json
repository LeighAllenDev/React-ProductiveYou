{"ast":null,"code":"var _jsxFileName = \"/Users/leighallen/Documents/GitHub/React-ProductiveYou/src/contexts/CurrentUser.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentUserContext = /*#__PURE__*/createContext(null);\nexport const SetCurrentUserContext = /*#__PURE__*/createContext();\nexport const useCurrentUser = () => {\n  _s();\n  return useContext(CurrentUserContext);\n};\n_s(useCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useSetCurrentUser = () => {\n  _s2();\n  return useContext(SetCurrentUserContext);\n};\n_s2(useSetCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CurrentUserProvider = ({\n  children\n}) => {\n  _s3();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const clearTokensAndLogout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    setCurrentUser(null);\n  };\n  const fetchCurrentUser = useCallback(async () => {\n    try {\n      const {\n        data\n      } = await axiosRes.get(\"/dj-rest-auth/user/\");\n      setCurrentUser(data);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        console.warn(\"Unauthorized: Clearing tokens\");\n        clearTokensAndLogout();\n      } else {\n        console.error(\"Error fetching current user:\", err);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (accessToken) {\n      fetchCurrentUser();\n    } else {\n      setCurrentUser(null);\n      setIsLoading(false);\n    }\n  }, [fetchCurrentUser]);\n  useEffect(() => {\n    let isRefreshing = false;\n    let subscribers = [];\n    const requestInterceptor = axiosReq.interceptors.request.use(config => {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      if (accessToken) {\n        config.headers.Authorization = `Bearer ${accessToken}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    const responseInterceptor = axiosRes.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      const originalRequest = error.config;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n        if (!isRefreshing) {\n          isRefreshing = true;\n          originalRequest._retry = true;\n          try {\n            const refreshToken = localStorage.getItem(\"refreshToken\");\n            const {\n              data\n            } = await axios.post(\"/dj-rest-auth/token/refresh/\", {\n              refresh: refreshToken\n            });\n            const newAccessToken = data.access;\n            localStorage.setItem(\"accessToken\", newAccessToken);\n            subscribers.forEach(callback => callback(newAccessToken));\n            subscribers = [];\n            return axiosReq(originalRequest);\n          } catch (refreshError) {\n            console.error(\"Error refreshing token:\", refreshError);\n            clearTokensAndLogout();\n          } finally {\n            isRefreshing = false;\n          }\n        } else {\n          return new Promise(resolve => {\n            subscribers.push(token => {\n              originalRequest.headers.Authorization = `Bearer ${token}`;\n              resolve(axiosReq(originalRequest));\n            });\n          });\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, []);\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(SetCurrentUserContext.Provider, {\n      value: setCurrentUser,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s3(CurrentUserProvider, \"N5S4zFK3dbazXRcE+Cp9WJEgF4o=\");\n_c = CurrentUserProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentUserProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useCallback","axios","axiosReq","axiosRes","jsxDEV","_jsxDEV","CurrentUserContext","SetCurrentUserContext","useCurrentUser","_s","useSetCurrentUser","_s2","CurrentUserProvider","children","_s3","currentUser","setCurrentUser","isLoading","setIsLoading","clearTokensAndLogout","localStorage","removeItem","fetchCurrentUser","data","get","err","_err$response","response","status","console","warn","error","accessToken","getItem","isRefreshing","subscribers","requestInterceptor","interceptors","request","use","config","headers","Authorization","Promise","reject","responseInterceptor","_error$response","originalRequest","_retry","refreshToken","post","refresh","newAccessToken","access","setItem","forEach","callback","refreshError","resolve","push","token","eject","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/Users/leighallen/Documents/GitHub/React-ProductiveYou/src/contexts/CurrentUser.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\n\nexport const CurrentUserContext = createContext(null);\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const clearTokensAndLogout = () => {\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"refreshToken\");\n        setCurrentUser(null);\n    };\n\n    const fetchCurrentUser = useCallback(async () => {\n        try {\n            const { data } = await axiosRes.get(\"/dj-rest-auth/user/\");\n            setCurrentUser(data);\n        } catch (err) {\n            if (err.response?.status === 401) {\n                console.warn(\"Unauthorized: Clearing tokens\");\n                clearTokensAndLogout();\n            } else {\n                console.error(\"Error fetching current user:\", err);\n            }\n        } finally {\n            setIsLoading(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem(\"accessToken\");\n        if (accessToken) {\n            fetchCurrentUser();\n        } else {\n            setCurrentUser(null);\n            setIsLoading(false);\n        }\n    }, [fetchCurrentUser]);\n\n    useEffect(() => {\n        let isRefreshing = false;\n        let subscribers = [];\n\n        const requestInterceptor = axiosReq.interceptors.request.use(\n            (config) => {\n                const accessToken = localStorage.getItem(\"accessToken\");\n                if (accessToken) {\n                    config.headers.Authorization = `Bearer ${accessToken}`;\n                }\n                return config;\n            },\n            (error) => Promise.reject(error)\n        );\n\n        const responseInterceptor = axiosRes.interceptors.response.use(\n            (response) => response,\n            async (error) => {\n                const originalRequest = error.config;\n\n                if (error.response?.status === 401 && !originalRequest._retry) {\n                    if (!isRefreshing) {\n                        isRefreshing = true;\n                        originalRequest._retry = true;\n\n                        try {\n                            const refreshToken = localStorage.getItem(\"refreshToken\");\n                            const { data } = await axios.post(\"/dj-rest-auth/token/refresh/\", {\n                                refresh: refreshToken,\n                            });\n\n                            const newAccessToken = data.access;\n                            localStorage.setItem(\"accessToken\", newAccessToken);\n\n                            subscribers.forEach((callback) => callback(newAccessToken));\n                            subscribers = [];\n                            return axiosReq(originalRequest);\n                        } catch (refreshError) {\n                            console.error(\"Error refreshing token:\", refreshError);\n                            clearTokensAndLogout();\n                        } finally {\n                            isRefreshing = false;\n                        }\n                    } else {\n                        return new Promise((resolve) => {\n                            subscribers.push((token) => {\n                                originalRequest.headers.Authorization = `Bearer ${token}`;\n                                resolve(axiosReq(originalRequest));\n                            });\n                        });\n                    }\n                }\n\n                return Promise.reject(error);\n            }\n        );\n\n        return () => {\n            axiosReq.interceptors.request.eject(requestInterceptor);\n            axiosRes.interceptors.response.eject(responseInterceptor);\n        };\n    }, []);\n\n    return isLoading ? (\n        <div>Loading...</div>\n    ) : (\n        <CurrentUserContext.Provider value={currentUser}>\n            <SetCurrentUserContext.Provider value={setCurrentUser}>\n                {children}\n            </SetCurrentUserContext.Provider>\n        </CurrentUserContext.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}