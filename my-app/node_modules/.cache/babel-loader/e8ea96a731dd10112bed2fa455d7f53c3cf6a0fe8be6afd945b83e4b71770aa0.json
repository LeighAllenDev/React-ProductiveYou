{"ast":null,"code":"import{createContext,useContext,useEffect,useState,useCallback}from\"react\";import axios from\"axios\";import{axiosReq,axiosRes}from\"../api/axiosDefaults\";import{jsx as _jsx}from\"react/jsx-runtime\";export const CurrentUserContext=/*#__PURE__*/createContext(null);export const SetCurrentUserContext=/*#__PURE__*/createContext();export const useCurrentUser=()=>useContext(CurrentUserContext);export const useSetCurrentUser=()=>useContext(SetCurrentUserContext);export const CurrentUserProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const clearTokensAndLogout=()=>{localStorage.removeItem(\"accessToken\");localStorage.removeItem(\"refreshToken\");setCurrentUser(null);};const fetchCurrentUser=useCallback(async()=>{try{const{data}=await axiosRes.get(\"/dj-rest-auth/user/\");setCurrentUser(data);}catch(err){var _err$response;if(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===401){console.warn(\"Unauthorized: Clearing tokens\");clearTokensAndLogout();}else{console.error(\"Error fetching current user:\",err);}}finally{setIsLoading(false);}},[]);useEffect(()=>{const accessToken=localStorage.getItem(\"accessToken\");if(accessToken){fetchCurrentUser();}else{setCurrentUser(null);setIsLoading(false);}},[fetchCurrentUser]);useEffect(()=>{let isRefreshing=false;let subscribers=[];const requestInterceptor=axiosReq.interceptors.request.use(config=>{const accessToken=localStorage.getItem(\"accessToken\");if(accessToken){config.headers.Authorization=`Bearer ${accessToken}`;}return config;},error=>Promise.reject(error));const responseInterceptor=axiosRes.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){if(!isRefreshing){isRefreshing=true;originalRequest._retry=true;try{const refreshToken=localStorage.getItem(\"refreshToken\");const{data}=await axios.post(\"/dj-rest-auth/token/refresh/\",{refresh:refreshToken});const newAccessToken=data.access;localStorage.setItem(\"accessToken\",newAccessToken);subscribers.forEach(callback=>callback(newAccessToken));subscribers=[];return axiosReq(originalRequest);}catch(refreshError){console.error(\"Error refreshing token:\",refreshError);clearTokensAndLogout();}finally{isRefreshing=false;}}else{return new Promise(resolve=>{subscribers.push(token=>{originalRequest.headers.Authorization=`Bearer ${token}`;resolve(axiosReq(originalRequest));});});}}return Promise.reject(error);});return()=>{axiosReq.interceptors.request.eject(requestInterceptor);axiosRes.interceptors.response.eject(responseInterceptor);};},[]);return isLoading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsx(SetCurrentUserContext.Provider,{value:setCurrentUser,children:children})});};","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useCallback","axios","axiosReq","axiosRes","jsx","_jsx","CurrentUserContext","SetCurrentUserContext","useCurrentUser","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","isLoading","setIsLoading","clearTokensAndLogout","localStorage","removeItem","fetchCurrentUser","data","get","err","_err$response","response","status","console","warn","error","accessToken","getItem","isRefreshing","subscribers","requestInterceptor","interceptors","request","use","config","headers","Authorization","Promise","reject","responseInterceptor","_error$response","originalRequest","_retry","refreshToken","post","refresh","newAccessToken","access","setItem","forEach","callback","refreshError","resolve","push","token","eject","Provider","value"],"sources":["/Users/leighallen/Documents/GitHub/React-ProductiveYou/my-app/src/contexts/CurrentUser.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\n\nexport const CurrentUserContext = createContext(null);\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const clearTokensAndLogout = () => {\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"refreshToken\");\n        setCurrentUser(null);\n    };\n\n    const fetchCurrentUser = useCallback(async () => {\n        try {\n            const { data } = await axiosRes.get(\"/dj-rest-auth/user/\");\n            setCurrentUser(data);\n        } catch (err) {\n            if (err.response?.status === 401) {\n                console.warn(\"Unauthorized: Clearing tokens\");\n                clearTokensAndLogout();\n            } else {\n                console.error(\"Error fetching current user:\", err);\n            }\n        } finally {\n            setIsLoading(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem(\"accessToken\");\n        if (accessToken) {\n            fetchCurrentUser();\n        } else {\n            setCurrentUser(null);\n            setIsLoading(false);\n        }\n    }, [fetchCurrentUser]);\n\n    useEffect(() => {\n        let isRefreshing = false;\n        let subscribers = [];\n\n        const requestInterceptor = axiosReq.interceptors.request.use(\n            (config) => {\n                const accessToken = localStorage.getItem(\"accessToken\");\n                if (accessToken) {\n                    config.headers.Authorization = `Bearer ${accessToken}`;\n                }\n                return config;\n            },\n            (error) => Promise.reject(error)\n        );\n\n        const responseInterceptor = axiosRes.interceptors.response.use(\n            (response) => response,\n            async (error) => {\n                const originalRequest = error.config;\n\n                if (error.response?.status === 401 && !originalRequest._retry) {\n                    if (!isRefreshing) {\n                        isRefreshing = true;\n                        originalRequest._retry = true;\n\n                        try {\n                            const refreshToken = localStorage.getItem(\"refreshToken\");\n                            const { data } = await axios.post(\"/dj-rest-auth/token/refresh/\", {\n                                refresh: refreshToken,\n                            });\n\n                            const newAccessToken = data.access;\n                            localStorage.setItem(\"accessToken\", newAccessToken);\n\n                            subscribers.forEach((callback) => callback(newAccessToken));\n                            subscribers = [];\n                            return axiosReq(originalRequest);\n                        } catch (refreshError) {\n                            console.error(\"Error refreshing token:\", refreshError);\n                            clearTokensAndLogout();\n                        } finally {\n                            isRefreshing = false;\n                        }\n                    } else {\n                        return new Promise((resolve) => {\n                            subscribers.push((token) => {\n                                originalRequest.headers.Authorization = `Bearer ${token}`;\n                                resolve(axiosReq(originalRequest));\n                            });\n                        });\n                    }\n                }\n\n                return Promise.reject(error);\n            }\n        );\n\n        return () => {\n            axiosReq.interceptors.request.eject(requestInterceptor);\n            axiosRes.interceptors.response.eject(responseInterceptor);\n        };\n    }, []);\n\n    return isLoading ? (\n        <div>Loading...</div>\n    ) : (\n        <CurrentUserContext.Provider value={currentUser}>\n            <SetCurrentUserContext.Provider value={setCurrentUser}>\n                {children}\n            </SetCurrentUserContext.Provider>\n        </CurrentUserContext.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}