{"ast":null,"code":"var _jsxFileName = \"/Users/leighallen/Documents/GitHub/React-ProductiveYou/my-app/src/contexts/CurrentUser.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentUserContext = /*#__PURE__*/createContext(null);\nexport const SetCurrentUserContext = /*#__PURE__*/createContext();\nexport const useCurrentUser = () => {\n  _s();\n  return useContext(CurrentUserContext);\n};\n_s(useCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useSetCurrentUser = () => {\n  _s2();\n  return useContext(SetCurrentUserContext);\n};\n_s2(useSetCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CurrentUserProvider = ({\n  children\n}) => {\n  _s3();\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  // Function to refresh the access token using HttpOnly cookies\n  const refreshToken = async () => {\n    try {\n      await axiosReq.post(\"/dj-rest-auth/token/refresh/\");\n      return true; // Successful refresh\n    } catch (err) {\n      console.error(\"Token refresh failed:\", err);\n      setCurrentUser(null);\n      navigate(\"/signin\");\n      return false;\n    }\n  };\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const {\n          data\n        } = await axiosRes.get(\"/dj-rest-auth/user/\");\n        setCurrentUser(data);\n      } catch (err) {\n        console.error(\"Error fetching current user:\", err);\n        const refreshed = await refreshToken();\n        if (refreshed) {\n          try {\n            const {\n              data\n            } = await axiosRes.get(\"/dj-rest-auth/user/\");\n            setCurrentUser(data);\n          } catch (fetchErr) {\n            console.error(\"Error fetching user after refresh:\", fetchErr);\n          }\n        }\n      }\n    };\n    fetchCurrentUser();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(SetCurrentUserContext.Provider, {\n      value: setCurrentUser,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s3(CurrentUserProvider, \"aDFO4WxZgCtbsTtCJ+EApWagTHk=\", false, function () {\n  return [useNavigate];\n});\n_c = CurrentUserProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentUserProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","axiosReq","axiosRes","jsxDEV","_jsxDEV","CurrentUserContext","SetCurrentUserContext","useCurrentUser","_s","useSetCurrentUser","_s2","CurrentUserProvider","children","_s3","currentUser","setCurrentUser","navigate","refreshToken","post","err","console","error","fetchCurrentUser","data","get","refreshed","fetchErr","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leighallen/Documents/GitHub/React-ProductiveYou/my-app/src/contexts/CurrentUser.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\n\nexport const CurrentUserContext = createContext(null);\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  // Function to refresh the access token using HttpOnly cookies\n  const refreshToken = async () => {\n    try {\n      await axiosReq.post(\"/dj-rest-auth/token/refresh/\");\n      return true; // Successful refresh\n    } catch (err) {\n      console.error(\"Token refresh failed:\", err);\n      setCurrentUser(null);\n      navigate(\"/signin\");\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const { data } = await axiosRes.get(\"/dj-rest-auth/user/\");\n        setCurrentUser(data);\n      } catch (err) {\n        console.error(\"Error fetching current user:\", err);\n        const refreshed = await refreshToken();\n        if (refreshed) {\n          try {\n            const { data } = await axiosRes.get(\"/dj-rest-auth/user/\");\n            setCurrentUser(data);\n          } catch (fetchErr) {\n            console.error(\"Error fetching user after refresh:\", fetchErr);\n          }\n        }\n      }\n    };\n\n    fetchCurrentUser();\n  }, [navigate]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n"],"mappings":";;;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,OAAO,MAAMC,kBAAkB,gBAAGT,aAAa,CAAC,IAAI,CAAC;AACrD,OAAO,MAAMU,qBAAqB,gBAAGV,aAAa,CAAC,CAAC;AAEpD,OAAO,MAAMW,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMX,UAAU,CAACQ,kBAAkB,CAAC;AAAA;AAACG,EAAA,CAAtDD,cAAc;AAC3B,OAAO,MAAME,iBAAiB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMb,UAAU,CAACS,qBAAqB,CAAC;AAAA;AAACI,GAAA,CAA5DD,iBAAiB;AAE9B,OAAO,MAAME,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,8BAA8B,CAAC;MACnD,OAAO,IAAI,CAAC,CAAC;IACf,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CJ,cAAc,CAAC,IAAI,CAAC;MACpBC,QAAQ,CAAC,SAAS,CAAC;MACnB,OAAO,KAAK;IACd;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,MAAMwB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMrB,QAAQ,CAACsB,GAAG,CAAC,qBAAqB,CAAC;QAC1DT,cAAc,CAACQ,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOJ,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC;QAClD,MAAMM,SAAS,GAAG,MAAMR,YAAY,CAAC,CAAC;QACtC,IAAIQ,SAAS,EAAE;UACb,IAAI;YACF,MAAM;cAAEF;YAAK,CAAC,GAAG,MAAMrB,QAAQ,CAACsB,GAAG,CAAC,qBAAqB,CAAC;YAC1DT,cAAc,CAACQ,IAAI,CAAC;UACtB,CAAC,CAAC,OAAOG,QAAQ,EAAE;YACjBN,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEK,QAAQ,CAAC;UAC/D;QACF;MACF;IACF,CAAC;IAEDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEZ,OAAA,CAACC,kBAAkB,CAACsB,QAAQ;IAACC,KAAK,EAAEd,WAAY;IAAAF,QAAA,eAC9CR,OAAA,CAACE,qBAAqB,CAACqB,QAAQ;MAACC,KAAK,EAAEb,cAAe;MAAAH,QAAA,EACnDA;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACqB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAElC,CAAC;AAACnB,GAAA,CA9CWF,mBAAmB;EAAA,QAEbX,WAAW;AAAA;AAAAiC,EAAA,GAFjBtB,mBAAmB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}