{"ast":null,"code":"var _jsxFileName = \"/Users/leighallen/Documents/GitHub/React-ProductiveYou/my-app/src/contexts/CurrentUser.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentUserContext = /*#__PURE__*/createContext(null);\nexport const SetCurrentUserContext = /*#__PURE__*/createContext();\nexport const useCurrentUser = () => {\n  _s();\n  return useContext(CurrentUserContext);\n};\n_s(useCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useSetCurrentUser = () => {\n  _s2();\n  return useContext(SetCurrentUserContext);\n};\n_s2(useSetCurrentUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CurrentUserProvider = ({\n  children\n}) => {\n  _s3();\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const {\n          data\n        } = await axiosRes.get(\"/dj-rest-auth/user/\");\n        setCurrentUser(data);\n      } catch (err) {\n        console.error(\"Error fetching current user:\", err);\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n  useEffect(() => {\n    let isRefreshing = false;\n    let subscribers = [];\n    const addSubscriber = callback => subscribers.push(callback);\n    const notifySubscribers = newToken => {\n      subscribers.forEach(callback => callback(newToken));\n      subscribers = [];\n    };\n    const refreshAccessToken = async () => {\n      try {\n        const {\n          data\n        } = await axiosReq.post(\"/dj-rest-auth/token/refresh/\");\n        const newAccessToken = data.access;\n        localStorage.setItem(\"accessToken\", newAccessToken);\n        return newAccessToken;\n      } catch (err) {\n        console.error(\"Failed to refresh token:\", err);\n        setCurrentUser(null);\n        navigate(\"/signin\"); // Redirect to login page on token refresh failure\n        throw err;\n      }\n    };\n    const requestInterceptor = axiosReq.interceptors.request.use(config => {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      if (accessToken) {\n        config.headers.Authorization = `Bearer ${accessToken}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    const responseInterceptor = axiosRes.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      const originalRequest = error.config;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        if (!isRefreshing) {\n          isRefreshing = true;\n          try {\n            const newAccessToken = await refreshAccessToken();\n            notifySubscribers(newAccessToken);\n            return axiosReq(originalRequest);\n          } catch (err) {\n            console.error(\"Token refresh failed:\", err);\n            throw err;\n          } finally {\n            isRefreshing = false;\n          }\n        } else {\n          return new Promise(resolve => {\n            addSubscriber(newToken => {\n              originalRequest.headers.Authorization = `Bearer ${newToken}`;\n              resolve(axiosReq(originalRequest));\n            });\n          });\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(SetCurrentUserContext.Provider, {\n      value: setCurrentUser,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s3(CurrentUserProvider, \"eEVymvORjM5HbwOr3AaqwWLj+vQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CurrentUserProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentUserProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useNavigate","axiosReq","axiosRes","jsxDEV","_jsxDEV","CurrentUserContext","SetCurrentUserContext","useCurrentUser","_s","useSetCurrentUser","_s2","CurrentUserProvider","children","_s3","currentUser","setCurrentUser","navigate","fetchCurrentUser","data","get","err","console","error","isRefreshing","subscribers","addSubscriber","callback","push","notifySubscribers","newToken","forEach","refreshAccessToken","post","newAccessToken","access","localStorage","setItem","requestInterceptor","interceptors","request","use","config","accessToken","getItem","headers","Authorization","Promise","reject","responseInterceptor","response","_error$response","originalRequest","status","_retry","resolve","eject","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leighallen/Documents/GitHub/React-ProductiveYou/my-app/src/contexts/CurrentUser.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\n\nexport const CurrentUserContext = createContext(null);\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const { data } = await axiosRes.get(\"/dj-rest-auth/user/\");\n        setCurrentUser(data);\n      } catch (err) {\n        console.error(\"Error fetching current user:\", err);\n      }\n    };\n\n    fetchCurrentUser();\n  }, []);\n\n  useEffect(() => {\n    let isRefreshing = false;\n    let subscribers = [];\n\n    const addSubscriber = (callback) => subscribers.push(callback);\n\n    const notifySubscribers = (newToken) => {\n      subscribers.forEach((callback) => callback(newToken));\n      subscribers = [];\n    };\n\n    const refreshAccessToken = async () => {\n      try {\n        const { data } = await axiosReq.post(\"/dj-rest-auth/token/refresh/\");\n        const newAccessToken = data.access;\n        localStorage.setItem(\"accessToken\", newAccessToken);\n        return newAccessToken;\n      } catch (err) {\n        console.error(\"Failed to refresh token:\", err);\n        setCurrentUser(null);\n        navigate(\"/signin\"); // Redirect to login page on token refresh failure\n        throw err;\n      }\n    };\n\n    const requestInterceptor = axiosReq.interceptors.request.use(\n      (config) => {\n        const accessToken = localStorage.getItem(\"accessToken\");\n        if (accessToken) {\n          config.headers.Authorization = `Bearer ${accessToken}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    const responseInterceptor = axiosRes.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config;\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n\n          if (!isRefreshing) {\n            isRefreshing = true;\n            try {\n              const newAccessToken = await refreshAccessToken();\n              notifySubscribers(newAccessToken);\n              return axiosReq(originalRequest);\n            } catch (err) {\n              console.error(\"Token refresh failed:\", err);\n              throw err;\n            } finally {\n              isRefreshing = false;\n            }\n          } else {\n            return new Promise((resolve) => {\n              addSubscriber((newToken) => {\n                originalRequest.headers.Authorization = `Bearer ${newToken}`;\n                resolve(axiosReq(originalRequest));\n              });\n            });\n          }\n        }\n\n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      axiosReq.interceptors.request.eject(requestInterceptor);\n      axiosRes.interceptors.response.eject(responseInterceptor);\n    };\n  }, [navigate]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}